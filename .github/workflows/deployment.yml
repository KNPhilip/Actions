name: Deploy Project
on:
  push:
    # Runs workflow when pushing to these target branches.
    branches:
      - main
      - 'dev-*' # dev-new dev-something - NOT: dev-some-thing
      - 'dev/**' # dev/new dev/something AND dev/some/thing
# Ignores when something is pushed to a specific branch
#    branches-ignore:
#      - dumb-branch
# Doesnt run workflow when push is changing the workflows
    paths-ignore:
      - '.github/workflows/*'
  workflow_dispatch:
  pull_request:
    types:
      - opened
    # runs when PRs targeting specific branches
    branches:
      - main
      - 'dev-*' # dev-new dev-something - NOT: dev-some-thing
      - 'dev/**' # dev/new dev/something AND dev/some/thing
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18 
      - name: Install dependencies
        run: npm i --legacy-peer-deps
      - name: Run tests
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      # Here we read the value from the steps output file
      script-file: ${{ steps.publish.outputs.output-name }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup node v18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm i --legacy-peer-deps
      - name: Build project
        run: npm run build
      - name: Publish JS filename
        id: publish
        # The $GITHUB_OUTPUT is an output file where the filename is written into
        run: find dist/assets/*.js -type f -execdir echo 'output-name={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # Manually use Job Artifacts
          # path: |
          #   dist
          #   package.json
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: artifacts/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Output filename
        # The needs context contains outputs for all
        # jobs defined as a dependency for this job
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."